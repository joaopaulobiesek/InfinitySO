@model StudentFinancialFormViewModel
@{
    ViewData["Title"] = "Edit New Financial Student";
}
<div class="row">
    <div class="col-md-8 mr-auto ml-auto">
        <div class="card ">
            <div class="card-header card-header-rose card-header-text">
                <div class="card-text">
                    <h4 class="card-title">@ViewData["Title"]</h4>
                </div>
            </div>
            <div class="card-body ">

                <!--Start-->
                <form asp-action="Edit">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <input type="hidden" asp-for="StudentFinancial.Id" />
                    <input type="hidden" asp-for="StudentFinancial.StudentId" />
                    <h6>@Html.DisplayNameFor(model => model.StudentFinancial.Student.MainBoard.Name)</h6>
                    <p class="text-secondary">@Html.DisplayFor(model => model.StudentFinancial.Student.MainBoard.Name) @Html.DisplayFor(model => model.StudentFinancial.Student.MainBoard.LastName) - CPF: @Html.DisplayFor(model => model.StudentFinancial.Student.MainBoard.CPF) - EAD: @Html.DisplayFor(model => model.StudentFinancial.Student.EAD)</p>
                    <br />
                    <div class="col-sm-7">
                        <div class="form-group">
                            <label asp-for="StudentFinancial.OpenValue"></label><br />
                            <input onKeyDown="Mascara(this,Valor);" onKeyPress="Mascara(this,Valor);" onKeyUp="Mascara(this,Valor);" asp-for="StudentFinancial.OpenValue" class="form-control" readonly="readonly" />
                            <span asp-validation-for="StudentFinancial.OpenValue" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-sm-7">
                        <div class="form-group">
                            <label asp-for="StudentFinancial.StudentFinanceInstallment"></label><br />
                            <input asp-for="StudentFinancial.StudentFinanceInstallment" class="form-control" readonly="readonly" />
                            <span asp-validation-for="StudentFinancial.StudentFinanceInstallment" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="StudentFinancial.DateDueBillet" class="form-check-label"></label><br />
                        <div class="input-group-prepend col-md-4">
                            <i class="material-icons">av_timer</i>
                            <input asp-for="StudentFinancial.DateDueBillet" class="form-control" />
                        </div>
                        <span asp-validation-for="StudentFinancial.DateDueBillet" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="StudentFinancial.DateNegotiation" class="form-check-label"></label><br />
                        <div class="input-group-prepend col-md-4">
                            <i class="material-icons">av_timer</i>
                            <input asp-for="StudentFinancial.DateNegotiation" class="form-control" />
                        </div>
                        <span asp-validation-for="StudentFinancial.DateNegotiation" class="text-danger"></span>
                    </div>
                    <div class="col-lg-5 col-md-6 col-sm-3">
                        <select asp-for="StudentFinancial.StudentFinancialNegotiation" asp-items="@StudentFinancialNegotiation.InProgress.ToSelectList()" class="selectpicker" data-size="7" data-style="btn btn-primary btn-round" title="Negociação Financeira do Estudante">
                            <option selected value="">Negociação Financeira do Estudante</option>
                        </select>
                        <span asp-validation-for="StudentFinancial.StudentFinancialNegotiation" class="text-danger"></span>
                    </div><br />
                    <hr />
                    <div class="material-datatables">
                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.DateDue)</th>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.ValueBillet)</th>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.BilletPay)</th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.DateDue)</th>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.ValueBillet)</th>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.BilletPay)</th>
                                </tr>
                            </tfoot>
                            @for (int i = 0; i < Model.BilletValues.Count; i++)
                            {
                                <tr>
                                    <td>
                                        <label asp-for="@Model.BilletValues[i].DateDue" class="form-check-label"></label>
                                        <input asp-for="@Model.BilletValues[i].DateDue" class="form-control" />
                                        <input type="hidden" asp-for="@Model.BilletValues[i].Id" />
                                        <input type="hidden" asp-for="@Model.BilletValues[i].StudentFinancialId" />
                                    </td>
                                    <td>
                                        <label asp-for="@Model.BilletValues[i].ValueBillet"> R$</label>
                                        <input asp-for="@Model.BilletValues[i].ValueBillet" onKeyDown="Mascara(this,Valor);" onKeyPress="Mascara(this,Valor);" onKeyUp="Mascara(this,Valor);" onblur="Calculate()" class="form-control" />
                                    </td>
                                    <td>
                                        <select asp-for="@Model.BilletValues[i].BilletPay" asp-items="@BilletPay.NotPaid.ToSelectList()" class="selectpicker" data-size="7" data-style="btn btn-primary btn-round" title="Parcela de financiamento estudantil">
                                            <option selected value="">Parcela de financiamento estudantil</option>
                                        </select>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                    <textarea style="display:none;" asp-for="stringBilletValues" id="BilletValues"></textarea>
                    <div class="form-group">
                        <input id="MySubmitCreate" type="submit" value="Edit" class="btn btn-info" />
                        <span id="SpanSubmitCreate" class="text-danger"></span>
                        <a asp-controller="StudentFinancials" asp-action="Index" class="btn btn-secondary" data-dismiss="modal">Back to List</a>
                    </div>
                </form>
                <!--End-->

            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script type="text/javascript">
        var IdValueBillet0 = document.getElementById("BilletValues_0__ValueBillet");
        var IdValueBillet1 = document.getElementById("BilletValues_1__ValueBillet");
        var IdValueBillet2 = document.getElementById("BilletValues_2__ValueBillet");
        var IdValueBillet3 = document.getElementById("BilletValues_3__ValueBillet");
        var IdValueBillet4 = document.getElementById("BilletValues_4__ValueBillet");
        var IdValueBillet5 = document.getElementById("BilletValues_5__ValueBillet");
        var IdValueBillet6 = document.getElementById("BilletValues_6__ValueBillet");
        var IdOpenValue = document.getElementById("StudentFinancial_OpenValue");
        var result = 0.00;
        function Calculate() {
            if (IdValueBillet6 !== null) {
                result = (parseFloat(IdValueBillet0.value) + parseFloat(IdValueBillet1.value) + parseFloat(IdValueBillet2.value) + parseFloat(IdValueBillet3.value) + parseFloat(IdValueBillet4.value) + parseFloat(IdValueBillet5.value) + parseFloat(IdValueBillet6.value));
            } else if (IdValueBillet5 !== null) {
                 result = (parseFloat(IdValueBillet0.value) + parseFloat(IdValueBillet1.value) + parseFloat(IdValueBillet2.value) + parseFloat(IdValueBillet3.value) + parseFloat(IdValueBillet4.value) + parseFloat(IdValueBillet5.value));
            } else if (IdValueBillet4 !== null) {
                 result = (parseFloat(IdValueBillet0.value) + parseFloat(IdValueBillet1.value) + parseFloat(IdValueBillet2.value) + parseFloat(IdValueBillet3.value) + parseFloat(IdValueBillet4.value));
            } else if (IdValueBillet3 !== null) {
                 result = (parseFloat(IdValueBillet0.value) + parseFloat(IdValueBillet1.value) + parseFloat(IdValueBillet2.value) + parseFloat(IdValueBillet3.value));
            } else if (IdValueBillet2 !== null) {
                 result = (parseFloat(IdValueBillet0.value) + parseFloat(IdValueBillet1.value) + parseFloat(IdValueBillet2.value));
            } else if (IdValueBillet1 !== null) {
                 result = (parseFloat(IdValueBillet0.value) + parseFloat(IdValueBillet1.value));
            } else if (IdValueBillet0 !== null) {
                  result = IdValueBillet0.value
            }
            result = Math.round(result * 100) / 100;
            IdOpenValue.value = result;
        }

        /*Função Pai de Mascaras*/
        function Mascara(o, f) {
            v_obj = o
            v_fun = f
            setTimeout("execmascara()", 1)
        }

        /*Função que Executa os objetos*/
        function execmascara() {
            v_obj.value = v_fun(v_obj.value)
        }

        /*Função que padroniza valor monétario*/
        function Valor(v) {
            v = v.replace(/\D/g, "") //Remove tudo o que não é dígito
            v = v.replace(/^([0-9]{3}\.?){3}-[0-9]{2}$/, "$1.$2");
            //v=v.replace(/(\d{3})(\d)/g,"$1,$2")
            v = v.replace(/(\d)(\d{2})$/, "$1.$2") //Coloca ponto antes dos 2 últimos digitos
            return v
        }

    </script>
}