@model StudentFinancialFormViewModel
@{
    ViewData["Title"] = "Create New Financial Student";
}
<div class="row">
    <div class="col-md-8 mr-auto ml-auto">
        <div class="card ">
            <div class="card-header card-header-rose card-header-text">
                <div class="card-text">
                    <h4 class="card-title">@ViewData["Title"]</h4>
                </div>
            </div>
            <div class="card-body ">

                <!--Start-->
                <form asp-action="Register">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="col-lg-10 col-md-6 col-sm-3">
                        <select id="StudentListId" asp-for="StudentFinancial.StudentId" class="selectpicker" data-size="7" data-style="btn btn-primary btn-round" title="Select Sector">
                            <option disabled selected>Select Name</option>
                            @foreach (var item in Model.Students)
                            {
                                <option value="@item.Id">@item.MainBoard.Name @item.MainBoard.LastName - CPF: @item.MainBoard.CPF - EAD: @item.EAD</option>
                            }
                        </select>
                    </div><br />
                    <div class="col-sm-7">
                        <div class="form-group">
                            <label asp-for="StudentFinancial.OpenValue"></label>
                            <input id="OpenValueId" onKeyDown="Mascara(this,Valor);" onKeyPress="Mascara(this,Valor);" onKeyUp="Mascara(this,Valor);" asp-for="StudentFinancial.OpenValue" class="form-control" />
                            <span asp-validation-for="StudentFinancial.OpenValue" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label asp-for="StudentFinancial.DateDueBillet" class="form-check-label"></label><br />
                        <div class="input-group-prepend col-md-4">
                            <i class="material-icons">av_timer</i>
                            <input asp-for="StudentFinancial.DateDueBillet" class="form-control" />
                        </div>
                        <span asp-validation-for="StudentFinancial.DateDueBillet" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="StudentFinancial.DateNegotiation" class="form-check-label"></label><br />
                        <div class="input-group-prepend col-md-4">
                            <i class="material-icons">av_timer</i>
                            <input asp-for="StudentFinancial.DateNegotiation" class="form-control" />
                        </div>
                        <span asp-validation-for="StudentFinancial.DateNegotiation" class="text-danger"></span>
                    </div>
                    <div class="col-lg-5 col-md-6 col-sm-3">
                        <select id="StudentFinancialNegotiationId" asp-for="StudentFinancial.StudentFinancialNegotiation" asp-items="@StudentFinancialNegotiation.InProgress.ToSelectList()" class="selectpicker" data-size="7" data-style="btn btn-primary btn-round" title="Negociação Financeira do Estudante">
                            <option selected value="">Negociação Financeira do Estudante</option>
                        </select>
                        <span asp-validation-for="StudentFinancial.StudentFinancialNegotiation" class="text-danger"></span>
                    </div><br />
                    <div class="col-lg-5 col-md-6 col-sm-3">
                        <select id="StudentFinanceInstallmentId" asp-for="StudentFinancial.StudentFinanceInstallment" asp-items="@StudentFinanceInstallment.X1.ToSelectList()" class="selectpicker" data-size="8" data-style="btn btn-primary btn-round" title="Parcela de financiamento estudantil">
                            <option selected value="">Parcela de financiamento estudantil</option>
                        </select>
                        <span asp-validation-for="StudentFinancial.StudentFinanceInstallment" class="text-danger"></span>
                    </div><br />
                    <hr />
                    <div class="material-datatables">
                        <table class="table table-striped table-no-bordered table-hover" cellspacing="0" width="100%" style="width:100%">
                            <thead>
                                <tr>
                                    <th>
                                        <label asp-for="BilletValue.DateDue" class="form-check-label"></label>
                                        <input id="DateDueId" asp-for="BilletValue.DateDue" class="form-control" />
                                    </th>
                                    <th>
                                        <label asp-for="BilletValue.ValueBillet"></label>
                                        <input id="ValueBilletId" onKeyDown="Mascara(this,Valor);" onKeyPress="Mascara(this,Valor);" onKeyUp="Mascara(this,Valor);" asp-for="BilletValue.ValueBillet" class="form-control" />
                                    </th>
                                    <th>
                                        <select id="BilletPayId" asp-for="BilletValue.BilletPay" asp-items="@BilletPay.NotPaid.ToSelectList()" class="selectpicker" data-size="7" data-style="btn btn-primary btn-round" title="Parcela de financiamento estudantil">
                                            <option selected value="">Parcela de financiamento estudantil</option>
                                        </select>
                                        <button style="float:right;" class="btn btn-link btn-info btn-just-icon" type="button" id="ButtonAddBillet" onclick="AddBillet()" disabled="disabled"><i class="material-icons">add_box</i></button>
                                    </th>
                                </tr>
                            </thead>
                            <tfoot>
                                <tr>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.DateDue)</th>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.ValueBillet)</th>
                                    <th>@Html.DisplayNameFor(model => model.BilletValue.BilletPay)</th>
                                </tr>
                            </tfoot>
                            <tbody id="BilletValuesId"></tbody>
                            <tbody id="BilletValuesTotalId"></tbody>
                        </table>
                    </div>
                    <textarea style="display:none;" asp-for="stringBilletValues" id="BilletValues"></textarea>
                    <div class="form-group">
                        <input id="MySubmitCreate" type="submit" value="Create" class="btn btn-info" disabled="disabled" />
                        <span id="SpanSubmitCreate" class="text-danger"></span>
                        <a asp-controller="StudentFinancials" asp-action="Index" class="btn btn-secondary" data-dismiss="modal">Back to List</a>
                    </div>
                </form>
                <!--End-->

            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>

        var inputs = $('input').on('keyup', verificarInputs);
        function verificarInputs() {
            const preenchidos = inputs.get().every(({ value }) => value)
            $('#ButtonAddBillet').prop('disabled', !preenchidos);
        }

        var Billets = new Object();
        Billets.BilletStudent = new Array();

        var IdDateDue = document.getElementById("DateDueId");
        var IdValueBillet = document.getElementById("ValueBilletId");
        var IdBilletValues = document.getElementById("BilletValuesId"); //Div responsavel por adicionar tbody
        var BilletValues = document.getElementById("BilletValues");
        var IdBilletValuesTotal = document.getElementById("BilletValuesTotalId"); //Div responsavel por adicionar tbody
        var MySubmitCreate = document.getElementById("MySubmitCreate");
        var SpanSubmitCreate = document.getElementById("SpanSubmitCreate");

        var IdStudentFinancialNegotiation = document.getElementById("StudentFinancialNegotiationId");
        var IdBilletPay = document.getElementById("BilletPayId");
        var IdStudentList = document.getElementById("StudentListId");
        var IdStudentFinanceInstallment = document.getElementById("StudentFinanceInstallmentId");
        var IdOpenValue = document.getElementById("OpenValueId");
        var count = 0;
        var result = 0.00;
        var resultFloat = 0;

        function AddBillet() {
            if (IdStudentFinancialNegotiation.options[IdStudentFinancialNegotiation.selectedIndex].value == "Select Negotiation") {
                alert("Unselected Negotiation");
            } else if (IdBilletPay.options[IdBilletPay.selectedIndex].value == "Billet Pay") {
                alert("Unselected Billet Pay");
            } else if (IdStudentList.options[IdStudentList.selectedIndex].value == "Select Name") {
                alert("Unselected Name");
            } else {

                if (count < IdStudentFinanceInstallment.value) {
                    count++;
                    result = (parseFloat(result) + parseFloat(IdValueBillet.value));
                    result = Math.round(result * 100) / 100;
                    if (count == IdStudentFinanceInstallment.value && parseFloat(IdOpenValue.value) == parseFloat(result)) {
                        MySubmitCreate.disabled = false;
                        resultFloat = parseFloat(IdOpenValue.value) - parseFloat(result);
                        SpanSubmitCreate.innerHTML = "R$ " + Math.round(resultFloat * 100) / 100;
                    } else {
                        resultFloat = parseFloat(IdOpenValue.value) - parseFloat(result);
                        SpanSubmitCreate.innerHTML = "R$ " + Math.round(resultFloat * 100) / 100;
                    }
                    Billets.BilletStudent.push({
                        "IdDateDue": IdDateDue.value,
                        "IdValueBillet": IdValueBillet.value,
                        "IdBilletPay": IdBilletPay.value
                    });

                    BilletValues.innerHTML = JSON.stringify(Billets.BilletStudent);

                    var Billet = "<tr>" +
                        "<td>" + IdDateDue.value + "</td>" +
                        "<td>" + IdValueBillet.value.replace(".", ",") + "</td>" +
                        "<td>" + IdBilletPay.options[IdBilletPay.selectedIndex].text + "</td>" +
                        "</tr>";
                    IdBilletValues.innerHTML += Billet;

                    var BilletTotal = "<tr class='table-danger'>" +
                        "<td></td>" +
                        "<td></td>" +
                        "<td>Total = R$ " + result + "</td>" +
                        "</tr>";
                    IdBilletValuesTotal.innerHTML = BilletTotal;
                } else {
                    if (count == IdStudentFinanceInstallment.value && parseFloat(IdOpenValue.value) == parseFloat(result)) {
                        MySubmitCreate.disabled = false;
                        resultFloat = parseFloat(IdOpenValue.value) - parseFloat(result);
                        SpanSubmitCreate.innerHTML = "R$ " + Math.round(resultFloat * 100) / 100;
                    } else {
                        resultFloat = parseFloat(IdOpenValue.value) - parseFloat(result);
                        SpanSubmitCreate.innerHTML = "R$ " + Math.round(resultFloat * 100) / 100;
                    }
                    alert("Only " + IdStudentFinanceInstallment.value + " billets are allowed");
                }
            }
        }
    </script>
    <script type="text/javascript">
        /*Função Pai de Mascaras*/
        function Mascara(o, f) {
            v_obj = o
            v_fun = f
            setTimeout("execmascara()", 1)
        }

        /*Função que Executa os objetos*/
        function execmascara() {
            v_obj.value = v_fun(v_obj.value)
        }

        /*Função que padroniza valor monétario*/
        function Valor(v) {
            v = v.replace(/\D/g, "") //Remove tudo o que não é dígito
            v = v.replace(/^([0-9]{3}\.?){3}-[0-9]{2}$/, "$1.$2");
            //v=v.replace(/(\d{3})(\d)/g,"$1,$2")
            v = v.replace(/(\d)(\d{2})$/, "$1.$2") //Coloca ponto antes dos 2 últimos digitos
            return v
        }

    </script>
}